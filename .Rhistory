color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
renderGrViz(create_graph(nodes))
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
color="white",
fill=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
render_graph(create_graph(nodes))
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
render_graph(create_graph(nodes))
?saveWidget
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "wdgt/dgrm1.html"))
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "wdgt/dgrm1.html")
library(htmlwidgets)
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "wdgt/dgrm1.html")
library(htmlwidgets)
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "wdgt/dgrm1.html")
library(htmlwidgets)
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "./wdgt/dgrm1.html")
library(htmlwidgets)
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "./wdgt/dgrm1.html")
library(htmlwidgets)
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "wdgt/dgrm1.html")
library(htmlwidgets)
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "dgrm1.html")
library(htmlwidgets)
library(DiagrammeR)
nodes <- create_nodes(nodes=c("Acquire", "Transform", "Analyze", "Visualize"),
style="filled",
color=c("#7fc97f", "#beaed4", "#fdc086", "#ffff99"))
saveWidget(render_graph(create_graph(nodes)), "dgrm1.html")
?saveWidget
?render_graph
render_graph(create_graph(nodes), otput="svg", width=900, height=200)
render_graph(create_graph(nodes), output="svg", width=900, height=200)
print(render_graph(create_graph(nodes), output="svg", width=900, height=200))
print(render_graph(create_graph(nodes), output="SVG", width=900, height=200))
?list
iris[[1]]
iris[[1]][2]
iris$Sepal.Length[[4]]
iris$Sepal.Length[[c(1:10)]]
iris$Sepal.Length[[c(1:10),]]
iris$Sepal.Length[[2]]
`huh?` <- iris$Sepal.Length[[2]] * 3 %>% sqrt()
library(magrittr)
`huh?` <- iris$Sepal.Length[[2]] * 3 %>% sqrt()
print(`huh?`)
?mtcars
library(ggplot2)
g1 <- ggplot(mtcars, aes(x=wt, y=mpg)) + geom_smooth() + geom_point()
print(g1)
ggsave(g1, filename="g1.svg")
library(ggthemes)
g1 + theme_hc()
g1 + theme_fivethirtyeight()
g1 + theme_wsj()
g1 + theme_solarized_2()
g1 + theme_solarized()
g1 + theme_gdocs()
g1 + theme_economist_white()
g1 + theme_stata()
install.packages(xlcd)
install.packages("xkcd")
g1 + theme_excel()
dat <- fromJSON(sprintf("http://bea.gov/api/data/?UserID=%s&method=GetData&datasetname=RegionalData&KeyCode=RPPALL_MI&Year=2013&&ResultFormat=json", Sys.getenv("BEA_API_TOKEN")))
library(jsonlite)
dat <- fromJSON(sprintf("http://bea.gov/api/data/?UserID=%s&method=GetData&datasetname=RegionalData&KeyCode=RPPALL_MI&Year=2013&&ResultFormat=json", Sys.getenv("BEA_API_TOKEN")))
dat <- dat$BEAAPI$Results$Data
dat$X2013 <- as.numeric(dat$DataValue)
head(dat)
dat$X2013 <- as.numeric(dat$DataValue)
dat$GeoName <- gsub(" \\(Metropolitan Statistical Area\\)", "",
dat$GeoName)
dat$GeoFips <- sprintf("%05d", as.numeric(dat$GeoFips))
head(dat)
install.packages("noncensus")
library(noncensus)
data("counties")
counties
head(counties)
data("combined_areas")
head(combined_areas)
?noncensus
sprintf("%s%s", counties$state_fips, counties$county_fips)
#data.frame(cbsa=sprintf("%s%s", counties$state_fips, counties$county_fips),
head(counties)
data.frame(fipscounty=sprintf("%s%s", counties$state_fips, counties$county_fips), cbsa=counties$cbsa, stringsAsFactors=FALSE)
data.frame(fipscounty=sprintf("%s%s", counties$state_fips, counties$county_fips), cbsa=counties$CBSA, stringsAsFactors=FALSE)
xlate <- data.frame(fipscounty=sprintf("%s%s", counties$state_fips,
counties$county_fips),
cbsa=counties$CBSA,
stringsAsFactors=FALSE)
dat <- merge(dat, xlate[,c("cbsa", "fipscounty")], by.x="GeoFips", by.y="cbsa"))
dat <- merge(dat, xlate[,c("cbsa", "fipscounty")], by.x="GeoFips", by.y="cbsa")
dat
?merge
str(dat)
head(dat)
library(httr)
response <- GET("http://bea.gov/api/data/",
query=list(
UserID=Sys.getenv("BEA_API_TOKEN"),
method="GetData",
datasetname="RegionalData",
KeyCode="RPPALL_MI",
Year="2013",
ResultFormat="json"
))
dat <- fromJSON(content(response, as="text"))
dat <- dat$BEAAPI$Results$Data
dat$X2013 <- as.numeric(dat$DataValue)
dat$GeoName <- gsub(" \\(Metropolitan Statistical Area\\)", "",
dat$GeoName)
dat$GeoFips <- sprintf("%05d", as.numeric(dat$GeoFips))
head(dat[,c(1,2,8)])
library(noncensus)
xlate <- data.frame(fipscounty=sprintf("%s%s", counties$state_fips,
counties$county_fips),
cbsa=counties$CBSA,
stringsAsFactors=FALSE)
dat <- merge(dat[,c(1,2,8)], xlate[,c("cbsa", "fipscounty")], by.x="GeoFips", by.y="cbsa")
head(dat)
library(leaflet)
library(rgdal)
library(rgeos)
library(scales)
library(jsonlite)
library(httr)
library(noncensus)
# Get the data (need to put your BEA_API_TOKEN in .Renviron ---------------
response <- GET("http://bea.gov/api/data/",
query=list(
UserID=Sys.getenv("BEA_API_TOKEN"),
method="GetData",
datasetname="RegionalData",
KeyCode="RPPALL_MI",
Year="2013",
ResultFormat="json"
))
dat <- fromJSON(content(response, as="text"))
dat <- dat$BEAAPI$Results$Data
dat$X2013 <- as.numeric(dat$DataValue)
# Cleanup the data a bit --------------------------------------------------
dat$GeoName <- gsub(" \\(Metropolitan Statistical Area\\)", "", dat$GeoName)
dat$GeoFips <- sprintf("%05d", as.numeric(dat$GeoFips))
# We need to translate census county codes to FIPS for the map ------------
data(counties)
xlate <- data.frame(fipscounty=sprintf("%s%s", counties$state_fips,
counties$county_fips),
cbsa=counties$CBSA,
stringsAsFactors=FALSE)
dat <- merge(dat[,c(1,2,8)], xlate[,c("cbsa", "fipscounty")],
by.x="GeoFips", by.y="cbsa")
# Use existing TopoJSON map files -----------------------------------------
URL <- "http://bl.ocks.org/mbostock/raw/4090846/us.json"
fil <- basename(URL)
if (!file.exists(fil)) download.file(URL, fil)
states <- readOGR(fil, "states", stringsAsFactors=FALSE)
county <- readOGR(fil, "counties", stringsAsFactors=FALSE)
rpp_counties <- subset(county, id %in% dat$fipscounty)
rpp_counties <- merge(rpp_counties, dat, by.x="id", by.y="fipscounty", all.x=TRUE)
# Setup color scale -------------------------------------------------------
pal <- colorBin("BrBG", range(rpp_counties$X2013), bins=5)
rpp_counties$color <- pal(rpp_counties$X2013)
# make the map ------------------------------------------------------------
leaflet() %>%
addProviderTiles("Acetate.terrain") %>%
addPolygons(data=rpp_counties, weight=0.25,
fillColor=~color, color="black", fillOpacity=1,
popup=~sprintf("In %s, <span style='font-weight:700'>%s</span> has the purchasing power of $100.00.",
htmlEscape(GeoName),
htmlEscape(dollar(X2013)))) %>%
addPolygons(data=states, weight=0.5, fillColor="white", fillOpacity=0, fill=FALSE, color="#525252") %>%
addLegend(position="bottomright", pal=pal, values=rpp_counties$X2013, labFormat=labelFormat("$"), opacity = 1) %>%
setView(-74.0059, 40.7127, 6)
library(htmltools)
library(leaflet)
library(rgdal)
library(rgeos)
library(scales)
library(jsonlite)
library(httr)
library(noncensus)
library(htmltools)
# Get the data (need to put your BEA_API_TOKEN in .Renviron ---------------
response <- GET("http://bea.gov/api/data/",
query=list(
UserID=Sys.getenv("BEA_API_TOKEN"),
method="GetData",
datasetname="RegionalData",
KeyCode="RPPALL_MI",
Year="2013",
ResultFormat="json"
))
dat <- fromJSON(content(response, as="text"))
dat <- dat$BEAAPI$Results$Data
dat$X2013 <- as.numeric(dat$DataValue)
# Cleanup the data a bit --------------------------------------------------
dat$GeoName <- gsub(" \\(Metropolitan Statistical Area\\)", "", dat$GeoName)
dat$GeoFips <- sprintf("%05d", as.numeric(dat$GeoFips))
# We need to translate census county codes to FIPS for the map ------------
data(counties)
xlate <- data.frame(fipscounty=sprintf("%s%s", counties$state_fips,
counties$county_fips),
cbsa=counties$CBSA,
stringsAsFactors=FALSE)
dat <- merge(dat[,c(1,2,8)], xlate[,c("cbsa", "fipscounty")],
by.x="GeoFips", by.y="cbsa")
# Use existing TopoJSON map files -----------------------------------------
URL <- "http://bl.ocks.org/mbostock/raw/4090846/us.json"
fil <- basename(URL)
if (!file.exists(fil)) download.file(URL, fil)
states <- readOGR(fil, "states", stringsAsFactors=FALSE)
county <- readOGR(fil, "counties", stringsAsFactors=FALSE)
rpp_counties <- subset(county, id %in% dat$fipscounty)
rpp_counties <- merge(rpp_counties, dat, by.x="id", by.y="fipscounty", all.x=TRUE)
# Setup color scale -------------------------------------------------------
pal <- colorBin("BrBG", range(rpp_counties$X2013), bins=5)
rpp_counties$color <- pal(rpp_counties$X2013)
# make the map ------------------------------------------------------------
leaflet() %>%
addProviderTiles("Acetate.terrain") %>%
addPolygons(data=rpp_counties, weight=0.25,
fillColor=~color, color="black", fillOpacity=1,
popup=~sprintf("In %s, <span style='font-weight:700'>%s</span> has the purchasing power of $100.00.",
htmlEscape(GeoName),
htmlEscape(dollar(X2013)))) %>%
addPolygons(data=states, weight=0.5, fillColor="white", fillOpacity=0, fill=FALSE, color="#525252") %>%
addLegend(position="bottomright", pal=pal, values=rpp_counties$X2013, labFormat=labelFormat("$"), opacity = 1) %>%
setView(-74.0059, 40.7127, 6)
install.packages("rdom")
library(taucharts)
?taucharts
taucharts::run_tau_app()
taucharts::run_tau_app("tau01")
packages = c("choroplethr", "choroplethrMaps", "shiny")
if (length(setdiff(packages, rownames(installed.packages()))) > 0)
{
install.packages(setdiff(packages, rownames(installed.packages())))
}
library(shiny)
?runApp
runaApp()
shiny::runaApp()
library(shiny)
runApp()
library(acs)
?api.key.install
api.key.install("10c324645152965f599eba32ce402743872e18de")
runApp()
library(taucharts)
tauchart(car_dat) %>%
tau_point("hp", c("euroEco", "co2"), color="euroEco") %>%
tau_legend() %>%  tau_tooltip() %>% tau_trendline()
data("cars_data")
cars_data
?taucahrts
?taucharts
library(taucharts)
data(cars_data)
tauchart(cars_data) %>%
tau_point("milespergallon", c("class", "price"), color="class") %>%
tau_trendline() %>% tau_legend()
library(htmlwidgets)
?scaffoldWidget
?devtools
?scaffoldWidget
knit_with_parameters('~/Development/graphical_web_2015/graphical_web_pres.Rmd')
library(taucharts)
data(cars_data)
tauchart(cars_data) %>%
tau_point("milespergallon", c("class", "price"), color="class") %>%
tau_trendline() %>% tau_legend()
library(leaflet)
library(rgdal)
library(rgeos)
library(scales)
library(jsonlite)
library(httr)
library(noncensus)
library(htmltools)
# Get the data (need to put your BEA_API_TOKEN in .Renviron ---------------
response <- GET("http://bea.gov/api/data/",
query=list(
UserID=Sys.getenv("BEA_API_TOKEN"),
method="GetData",
datasetname="RegionalData",
KeyCode="RPPALL_MI",
Year="2013",
ResultFormat="json"
))
dat <- fromJSON(content(response, as="text"))
dat <- dat$BEAAPI$Results$Data
dat$X2013 <- as.numeric(dat$DataValue)
# Cleanup the data a bit --------------------------------------------------
dat$GeoName <- gsub(" \\(Metropolitan Statistical Area\\)", "", dat$GeoName)
dat$GeoFips <- sprintf("%05d", as.numeric(dat$GeoFips))
# We need to translate census county codes to FIPS for the map ------------
data(counties)
xlate <- data.frame(fipscounty=sprintf("%s%s", counties$state_fips,
counties$county_fips),
cbsa=counties$CBSA,
stringsAsFactors=FALSE)
dat <- merge(dat[,c(1,2,8)], xlate[,c("cbsa", "fipscounty")],
by.x="GeoFips", by.y="cbsa")
# Use existing TopoJSON map files -----------------------------------------
URL <- "http://bl.ocks.org/mbostock/raw/4090846/us.json"
fil <- basename(URL)
if (!file.exists(fil)) download.file(URL, fil)
states <- readOGR(fil, "states", stringsAsFactors=FALSE)
county <- readOGR(fil, "counties", stringsAsFactors=FALSE)
rpp_counties <- subset(county, id %in% dat$fipscounty)
rpp_counties <- merge(rpp_counties, dat, by.x="id", by.y="fipscounty", all.x=TRUE)
# Setup color scale -------------------------------------------------------
pal <- colorBin("BrBG", range(rpp_counties$X2013), bins=5)
rpp_counties$color <- pal(rpp_counties$X2013)
# make the map ------------------------------------------------------------
leaflet() %>%
addProviderTiles("Acetate.terrain") %>%
addPolygons(data=rpp_counties, weight=0.25,
fillColor=~color, color="black", fillOpacity=1,
popup=~sprintf("In %s, <span style='font-weight:700'>%s</span> has the purchasing power of $100.00.",
htmlEscape(GeoName),
htmlEscape(dollar(X2013)))) %>%
addPolygons(data=states, weight=0.5, fillColor="white", fillOpacity=0, fill=FALSE, color="#525252") %>%
addLegend(position="bottomright", pal=pal, values=rpp_counties$X2013, labFormat=labelFormat("$"), opacity = 1) %>%
setView(-74.0059, 40.7127, 6)
leaflet() %>%
addProviderTiles("Acetate.terrain") %>%
addPolygons(data=rpp_counties, weight=0.25,
fillColor=~color, color="black", fillOpacity=1,
popup=~sprintf("In %s, <span style='font-weight:700'>%s</span> has the purchasing power of $100.00.",
htmlEscape(GeoName),
htmlEscape(dollar(X2013)))) %>%
addPolygons(data=states, weight=0.5, fillColor="white", fillOpacity=0, fill=FALSE, color="#525252") %>%
addLegend(position="bottomright", pal=pal, values=rpp_counties$X2013, labFormat=labelFormat("$"), opacity = 1) %>%
setView(-74.0059, 40.7127, 6) %>% htmlwidgets::saveWidget("~/Dropbox/homeshare/rpp.html")
library(htmlwidgets)
?saveWidget
options("pandoc.stack.size')
"
'
"
)
)=4@#$%#%Y&$^*
!@#$@$#^:$%^&$"%
!@#{$@#$U{&*()
"_()*&
"I&u56}}
~#!@%^#%@$&#$%*(%*&)^
!@!@$+R_T@$#!O^&$#^%&${*^(^%*&)(68)}
library(htmlwidgets)
options("pandoc.stack.size")
options(pandoc.stack.size=1024)
leaflet() %>%
addProviderTiles("Acetate.terrain") %>%
addPolygons(data=rpp_counties, weight=0.25,
fillColor=~color, color="black", fillOpacity=1,
popup=~sprintf("In %s, <span style='font-weight:700'>%s</span> has the purchasing power of $100.00.",
htmlEscape(GeoName),
htmlEscape(dollar(X2013)))) %>%
addPolygons(data=states, weight=0.5, fillColor="white", fillOpacity=0, fill=FALSE, color="#525252") %>%
addLegend(position="bottomright", pal=pal, values=rpp_counties$X2013, labFormat=labelFormat("$"), opacity = 1) %>%
setView(-74.0059, 40.7127, 6) %>% htmlwidgets::saveWidget("~/Dropbox/homeshare/rpp.html")
library(leaflet)
library(rgdal)
library(rgeos)
library(scales)
library(jsonlite)
library(httr)
library(noncensus)
library(htmltools)
# Get the data (need to put your BEA_API_TOKEN in .Renviron ---------------
response <- GET("http://bea.gov/api/data/",
query=list(
UserID=Sys.getenv("BEA_API_TOKEN"),
method="GetData",
datasetname="RegionalData",
KeyCode="RPPALL_MI",
Year="2013",
ResultFormat="json"
))
dat <- fromJSON(content(response, as="text"))
dat <- dat$BEAAPI$Results$Data
dat$X2013 <- as.numeric(dat$DataValue)
# Cleanup the data a bit --------------------------------------------------
dat$GeoName <- gsub(" \\(Metropolitan Statistical Area\\)", "", dat$GeoName)
dat$GeoFips <- sprintf("%05d", as.numeric(dat$GeoFips))
# We need to translate census county codes to FIPS for the map ------------
data(counties)
xlate <- data.frame(fipscounty=sprintf("%s%s", counties$state_fips,
counties$county_fips),
cbsa=counties$CBSA,
stringsAsFactors=FALSE)
dat <- merge(dat[,c(1,2,8)], xlate[,c("cbsa", "fipscounty")],
by.x="GeoFips", by.y="cbsa")
# Use existing TopoJSON map files -----------------------------------------
URL <- "http://bl.ocks.org/mbostock/raw/4090846/us.json"
fil <- basename(URL)
if (!file.exists(fil)) download.file(URL, fil)
states <- readOGR(fil, "states", stringsAsFactors=FALSE)
county <- readOGR(fil, "counties", stringsAsFactors=FALSE)
rpp_counties <- subset(county, id %in% dat$fipscounty)
rpp_counties <- merge(rpp_counties, dat, by.x="id", by.y="fipscounty", all.x=TRUE)
# Setup color scale -------------------------------------------------------
pal <- colorBin("BrBG", range(rpp_counties$X2013), bins=5)
rpp_counties$color <- pal(rpp_counties$X2013)
# make the map ------------------------------------------------------------
leaflet() %>%
addProviderTiles("Acetate.terrain") %>%
addPolygons(data=rpp_counties, weight=0.25,
fillColor=~color, color="black", fillOpacity=1,
popup=~sprintf("In %s, <span style='font-weight:700'>%s</span> has the purchasing power of $100.00.",
htmlEscape(GeoName),
htmlEscape(dollar(X2013)))) %>%
addPolygons(data=states, weight=0.5, fillColor="white", fillOpacity=0, fill=FALSE, color="#525252") %>%
addLegend(position="bottomright", pal=pal, values=rpp_counties$X2013, labFormat=labelFormat("$"), opacity = 1) %>%
setView(-74.0059, 40.7127, 6) %>% htmlwidgets::saveWidget("~/Dropbox/homeshare/rpp.html")
devtools::install_github("ramnathv/htmlwidgets")
library(htmlwidgets)
library(leaflet)
library(rgdal)
library(rgeos)
library(scales)
library(jsonlite)
library(httr)
library(noncensus)
library(htmltools)
# Get the data (need to put your BEA_API_TOKEN in .Renviron ---------------
response <- GET("http://bea.gov/api/data/",
query=list(
UserID=Sys.getenv("BEA_API_TOKEN"),
method="GetData",
datasetname="RegionalData",
KeyCode="RPPALL_MI",
Year="2013",
ResultFormat="json"
))
dat <- fromJSON(content(response, as="text"))
dat <- dat$BEAAPI$Results$Data
dat$X2013 <- as.numeric(dat$DataValue)
# Cleanup the data a bit --------------------------------------------------
dat$GeoName <- gsub(" \\(Metropolitan Statistical Area\\)", "", dat$GeoName)
dat$GeoFips <- sprintf("%05d", as.numeric(dat$GeoFips))
# We need to translate census county codes to FIPS for the map ------------
data(counties)
xlate <- data.frame(fipscounty=sprintf("%s%s", counties$state_fips,
counties$county_fips),
cbsa=counties$CBSA,
stringsAsFactors=FALSE)
dat <- merge(dat[,c(1,2,8)], xlate[,c("cbsa", "fipscounty")],
by.x="GeoFips", by.y="cbsa")
# Use existing TopoJSON map files -----------------------------------------
URL <- "http://bl.ocks.org/mbostock/raw/4090846/us.json"
fil <- basename(URL)
if (!file.exists(fil)) download.file(URL, fil)
states <- readOGR(fil, "states", stringsAsFactors=FALSE)
county <- readOGR(fil, "counties", stringsAsFactors=FALSE)
rpp_counties <- subset(county, id %in% dat$fipscounty)
rpp_counties <- merge(rpp_counties, dat, by.x="id", by.y="fipscounty", all.x=TRUE)
# Setup color scale -------------------------------------------------------
pal <- colorBin("BrBG", range(rpp_counties$X2013), bins=5)
rpp_counties$color <- pal(rpp_counties$X2013)
# make the map ------------------------------------------------------------
leaflet() %>%
addProviderTiles("Acetate.terrain") %>%
addPolygons(data=rpp_counties, weight=0.25,
fillColor=~color, color="black", fillOpacity=1,
popup=~sprintf("In %s, <span style='font-weight:700'>%s</span> has the purchasing power of $100.00.",
htmlEscape(GeoName),
htmlEscape(dollar(X2013)))) %>%
addPolygons(data=states, weight=0.5, fillColor="white", fillOpacity=0, fill=FALSE, color="#525252") %>%
addLegend(position="bottomright", pal=pal, values=rpp_counties$X2013, labFormat=labelFormat("$"), opacity = 1) %>%
setView(-74.0059, 40.7127, 6) %>% htmlwidgets::saveWidget("~/Dropbox/homeshare/rpp.html")
knit_with_parameters('~/Development/graphical_web_2015/graphical_web_pres.Rmd')
library(taucharts)
?tau_tooltip
